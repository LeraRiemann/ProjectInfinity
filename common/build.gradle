architectury {
    common rootProject.enabled_platforms.split(',')
}

repositories {
    maven {
        url "https://maven.squiddev.cc"
        content {
            includeGroup("cc.tweaked")
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$project.fabric_loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$project.fabric_api_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury:$project.architectury_api_version"

    // Cloth Config API.
    modApi("me.shedaniel.cloth:cloth-config-fabric:$project.cloth_version") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation "maven.modrinth:eiv:${eiv_version}+${minecraft_version}"

    // modApi("com.github.iPortalTeam:DimLib:${dimlib_version}") {
    //     exclude(group: "net.fabricmc.fabric-api")
    // }

    // CC Tweaked
    // modImplementation("cc.tweaked:cc-tweaked-$minecraft_version-fabric:$cct_version")

    // EMI
//    modCompileOnly("dev.emi:emi-xplat-intermediary:$emi_version+$minecraft_version:api")

    // Ponder
//    modCompileOnly("net.createmod.ponder:Ponder-Fabric-${minecraft_version}:${ponder_version}")

}

loom {
    accessWidenerPath = file("src/main/resources/infinity.accesswidener")
}