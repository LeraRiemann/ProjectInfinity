plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

processResources {
    from(rootProject.file("common/src/main/resources")) {
        include("config/*/")
        include("infinity.accesswidener")
    }
}
configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven {
        url "https://maven.su5ed.dev/releases"
    }
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    // Architectury API.
    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"

    // Catalogue - Optional dependency.
    modImplementation "curse.maven:catalogue-459701:${catalogue_version}"

    // Forgified Fabric API modules. Where possible, work is being done to migrate these to Architectury API.
    modImplementation "org.sinytra.forgified-fabric-api:fabric-api-base:${forgified_fabric_api_base_version}" // Required for other modules to load.
    modImplementation "org.sinytra.forgified-fabric-api:fabric-networking-api-v1:${forgified_fabric_api_networking_version}" // Required by ModPayloads
    modImplementation "org.sinytra:forgified-fabric-loader:${forgified_fabric_loader_version}" // Required by FFAPI

    // Optional Forgified Fabric API modules.
    modImplementation "org.sinytra.forgified-fabric-api:fabric-item-group-api-v1:${forgified_fabric_api_item_group_version}" // optional dependency for ModItems
    modImplementation "org.sinytra.forgified-fabric-api:fabric-resource-loader-v0:1.3.0+bcae32ce19" // required dependency for item group api

    // Cloth Config API - Optional dependency.
    modApi "me.shedaniel.cloth:cloth-config-neoforge:${project.cloth_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
    atAccessWideners.add("infinity.accesswidener")
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}