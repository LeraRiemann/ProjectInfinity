plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

processResources {
    from(rootProject.file("common/src/main/resources")) {
        include("config/*/")
    }
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven {
        url "https://maven.su5ed.dev/releases"
    }
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"
    //Forgified Fabric API. Where possible, work will be done to migrate away from this and rely on Arch API.
    modImplementation "org.sinytra.forgified-fabric-api:forgified-fabric-api:${forgified_fabric_api_version}"
    modImplementation "curse.maven:catalogue-459701:${catalogue_version}"


//    modImplementation "org.sinytra.forgified-fabric-api:fabric-api-base:${forgified_fabric_api_base_version}"
//    modImplementation "org.sinytra.forgified-fabric-api:fabric-registry-sync-v0:${forgified_fabric_api_sync_version}"
//    modImplementation "org.sinytra.forgified-fabric-api:fabric-networking-api-v1:${forgified_fabric_api_networking_version}"
//    modImplementation "org.sinytra.forgified-fabric-api:fabric-command-api-v2:${forgified_fabric_api_command_version}"
//    modImplementation "org.sinytra:forgified-fabric-loader:${forgified_fabric_loader_version}"



    modApi "me.shedaniel.cloth:cloth-config-neoforge:${project.cloth_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}